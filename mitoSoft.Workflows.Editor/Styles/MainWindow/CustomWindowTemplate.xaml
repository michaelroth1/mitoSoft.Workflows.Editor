<ResourceDictionary 
     x:Class="mitoSoft.Workflows.Editor.Styles.CustomWindowTemplate"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="RectBorderStyle" TargetType="Rectangle">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Fill" Value="Transparent" />
        <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
        <EventSetter Event="MouseLeftButtonDown" Handler="ResizeStart"/>
        <EventSetter Event="MouseLeftButtonUp" Handler="ResizeEnd"/>
        <EventSetter Event="MouseMove" Handler="Resizeing_Form"/>
    </Style>
    
    <ControlTemplate x:Key="CustomWindowTemplate" TargetType="{x:Type Window}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid >
                <Border Padding="{TemplateBinding Padding}">
                    <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                </Border>


                <Rectangle x:Name="left" Width="7" Margin="0,7,0,7"   HorizontalAlignment="Left" Cursor="SizeWE" Style="{StaticResource RectBorderStyle}"  />
                <Rectangle x:Name="right" Width="7" Margin="0,7,0,7" HorizontalAlignment="Right" Cursor="SizeWE" Style="{StaticResource RectBorderStyle}" />
                <Rectangle x:Name="top" Height="7"  Margin="7,0,7,0" VerticalAlignment="Top" Cursor="SizeNS" Style="{StaticResource RectBorderStyle}" />
                <Rectangle x:Name="bottom" Height="7" Margin="7,0,7,0" VerticalAlignment="Bottom" Cursor="SizeNS" Style="{StaticResource RectBorderStyle}" />
                <!--  Corners  -->
                <Rectangle Name="topLeft" Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="SizeNWSE" Style="{StaticResource RectBorderStyle}" />
                <Rectangle Name="topRight" Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Top" Cursor="SizeNESW" Style="{StaticResource RectBorderStyle}" />
                <Rectangle Name="bottomLeft" Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Bottom" Cursor="SizeNESW" Style="{StaticResource RectBorderStyle}" />
                <!--<Rectangle Name="bottomRight" Width="5" Height="5" HorizontalAlignment="Right" VerticalAlignment="Bottom" Cursor="SizeNWSE" Style="{StaticResource RectBorderStyle}" />-->


                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource CustomWindowTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>