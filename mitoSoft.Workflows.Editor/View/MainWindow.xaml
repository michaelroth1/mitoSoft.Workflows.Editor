<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:view="clr-namespace:mitoSoft.Workflows.Editor.View"
        xmlns:styles="clr-namespace:mitoSoft.Workflows.Editor.Styles"
        xmlns:viewModel="clr-namespace:mitoSoft.Workflows.Editor.ViewModel"  
    xmlns:enums="clr-namespace:mitoSoft.Workflows.Editor.Helpers.Enums"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    
    x:Class="mitoSoft.Workflows.Editor.View.MainWindow"
        mc:Ignorable="d"
        Title="mitoSoft.Workflows.Editor"  d:DesignWidth="550" Height="738.592" MinWidth="570" MinHeight="400"  BorderThickness="1" Padding="7,0,7,7" ResizeMode="CanResizeWithGrip" BorderBrush="{DynamicResource ColorWindowBorder}" Background="{DynamicResource ColorWindowHeader}" Foreground="{x:Null}" WindowStyle="None" AllowsTransparency="True" Style="{DynamicResource CustomWindowStyle}">
    <Window.Resources>
        <DataTemplate DataType="{x:Type viewModel:BaseNodeViewModel}">
            <view:NodeViewProperties ViewModel="{Binding}" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModel:ParallelNodeViewModel}">
            <view:ParallelNodeViewProperties ViewModel="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:SequenceNodeViewModel}">
            <view:SequenceNodeViewProperties ViewModel="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:SubWorkflowNodeViewModel}">
            <view:SubWorkflowNodeProperties ViewModel="{Binding}" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModel:ConnectorViewModel}">
            <view:TransitionProp ViewModel="{Binding}" />
        </DataTemplate>
        
    </Window.Resources>


    <Grid Background="{DynamicResource ColorWindowHeader}" >

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto"/>
            <RowDefinition x:Name="MainColumn" MinHeight="50"></RowDefinition>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto" x:Name="Fotter" MinHeight="18"/>
        </Grid.RowDefinitions>
        <view:Dialog x:Name="Dialog"/>

        <!--#region Header-->
        <DockPanel x:Name="Header" Grid.Row="0" Background="{DynamicResource ColorWindowHeader}" LastChildFill="False">
            <!--#region  Menu-->
            <!--OpacityMask - it's color on MouseOver-->
            <Menu Background="{DynamicResource ColorMenuBackground}"  Foreground="{DynamicResource ColorMenuForeground}" BorderBrush="{DynamicResource ColorMenuBorder}" OpacityMask="{DynamicResource ColorMenuBackgroundMouseOver}"  Template="{DynamicResource MenuTemplate}" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                <MenuItem Header="File" x:Name="Item" Style="{DynamicResource StyleMenuItem}" Margin="3,0,3,0">
                    <MenuItem Header="New" x:Name="ItemNew" InputGestureText="Ctrl+N"  Style="{DynamicResource StyleMenuItem}">
                        <MenuItem.Icon>
                            <Rectangle Fill="{DynamicResource IconNewSheme}" Height="15" Width="15"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Open" x:Name="ItemOpen" InputGestureText="Ctrl+O"  Style="{DynamicResource StyleMenuItem}" >
                        <MenuItem.Icon>
                            <Rectangle Fill="{DynamicResource IconImportScheme}" Height="15" Width="15"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Background="{DynamicResource ColorSeparator}"/>
                    <MenuItem Header="Save" InputGestureText="Ctrl+S" x:Name="ItemSave" Style="{DynamicResource StyleMenuItem}" >
                        <MenuItem.Icon>
                            <Rectangle Fill="{DynamicResource IconSave}" Height="13" Width="13"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="SaveAs..." x:Name="ItemSaveAs" InputGestureText="Ctrl+Shift+S" Style="{DynamicResource StyleMenuItem}">
                        <MenuItem.Icon>
                            <Rectangle Fill="{DynamicResource IconSaveAs}" Height="15" Width="15"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Export" x:Name="ItemExport" Style="{DynamicResource StyleMenuItem}">
                        <MenuItem.Icon>
                            <Rectangle Fill="{DynamicResource IconExportScheme}" Height="15" Width="15"/>
                        </MenuItem.Icon>
                        <MenuItem Header="Export to PNG" x:Name="ItemExportToPNG" Style="{DynamicResource StyleMenuItem}"/>
                        <MenuItem Header="Export to JPEG" x:Name="ItemExportToJPEG" Style="{DynamicResource StyleMenuItem}"/>
                    </MenuItem>
                    <Separator Background="{DynamicResource ColorSeparator}"/>
                    <MenuItem Header="Exit"  x:Name="ItemExit" InputGestureText="Alt+F4"   Style="{DynamicResource StyleMenuItem}">
                        <MenuItem.Icon>
                            <Rectangle Fill="{DynamicResource IconExit}" Height="14" Width="14"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Edit"  x:Name="ItemEdit" Style="{DynamicResource StyleMenuItem}" Margin="3,0,3,0">
                    <MenuItem Header="Undo"  x:Name="ItemUndo" InputGestureText="Ctrl+Z"  Style="{DynamicResource StyleMenuItem}">
                        <MenuItem.Icon>
                            <Rectangle Fill="{DynamicResource IconUndo}" Height="13" Width="13"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Redo"  x:Name="ItemRedo" InputGestureText="Ctrl+Y" Style="{DynamicResource StyleMenuItem}">
                        <MenuItem.Icon>
                            <Rectangle Fill="{DynamicResource IconRedo}" Height="13" Width="13"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Background="{DynamicResource ColorSeparator}"/>
                    <MenuItem Header="SelectAll"  x:Name="ItemSelectAll" InputGestureText="Ctrl+A" Style="{DynamicResource StyleMenuItem}">
                        <MenuItem.Icon>
                            <Rectangle Fill="{DynamicResource IconSelectAll}" Height="15" Width="15"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>

            <!--#endregion Menu-->
            <!--#region  Main Panel-->
            <!--BorderBrush - it's Background color on IsMouseOver, OpacityMask - it's color on IsPressed-->
            <Button DockPanel.Dock="Right" x:Name="ButtonClose" ToolTip="Close" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonCloseBackgroundMouseOver}" OpacityMask="{DynamicResource ColorWindowHeaderButtonCloseBackgroundPressed}"  Padding="7" Grid.IsSharedSizeScope="True" Margin="0,0,-7,0">
                <Rectangle  Fill="{DynamicResource IconClose}" Height="11" Width="11"/>
            </Button>

            <Button DockPanel.Dock="Right" x:Name="ButtonMax" ToolTip="Maximize" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}" OpacityMask="{DynamicResource ColorWindowHeaderButtonBackgroundPressed}">
                <Rectangle x:Name="ButtonMaxRectangle"  Stroke="Yellow" Fill="{DynamicResource IconMaximize}" Height="11" Width="11" StrokeThickness="0"/>
            </Button>
            <Button DockPanel.Dock="Right" x:Name="ButtonMin" ToolTip="Minimize" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}" OpacityMask="{DynamicResource ColorWindowHeaderButtonBackgroundPressed}" >
                <Rectangle Fill="{DynamicResource IconMinimize}" Height="1" Width="11" />
            </Button>

            <!--For Name of scheme-->
            <Label x:Name="LabelSchemeName" Style="{DynamicResource StyleLabel}" BorderBrush="{DynamicResource ColorNodesCanvasBackground}" Background="{DynamicResource ColorNodesCanvasBackground}" BorderThickness="10,5,10,5" Margin="10,  0, 0 ,0" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource ColorMenuForeground}">
                <Label.ContextMenu>
                    <ContextMenu Template="{DynamicResource TemplateContextMenu}" Background="{DynamicResource ColorMenuBackground}" BorderBrush="{DynamicResource ColorMenuBorder}" OpacityMask="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}"  Foreground="{DynamicResource ColorMenuForeground}" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" >
                        <MenuItem Header="Copy" x:Name="ItemCopySchemeName" InputGestureText="Ctrl+C" Style="{DynamicResource StyleContextMenuItem}">
                            <MenuItem.Icon>
                                <Rectangle Fill="{DynamicResource IconCopy}" Height="15" Width="13"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Label.ContextMenu>
                <Label.InputBindings>
                    <KeyBinding x:Name="BindingCopySchemeName" Key="C" Modifiers="Control" />
                </Label.InputBindings>
            </Label>            
            <Button DockPanel.Dock="Right" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" />
            <!--#endregion Main Panel-->
        </DockPanel>
        <!--#endregion  Header-->

        <!--#region ToolBar-->
        <Grid Grid.Row="1"  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto" />

            </Grid.ColumnDefinitions>
            <ToolBarTray Grid.Column="0"  Background="{x:Null}" IsLocked="True" >
                <ToolBar Style="{DynamicResource ToolBarTemplate}" Background="{x:Null}" Foreground="{x:Null}">
                    <Button x:Name="ButtonNew" ToolTip="New (Ctrl+N)" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconNewSheme}" Height="15" Width="15"/>
                    </Button>
                    <Button x:Name="ButtonOpen" ToolTip="Open (Ctrl+O)"  Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconImportScheme}" Height="15" Width="15"/>
                    </Button>
                    <Button x:Name="ButtonSave"  ToolTip="Save (Ctrl+S)" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconSave}" Height="13" Width="13"/>
                    </Button>
                    <Button x:Name="ButtonSaveAs" ToolTip="Save As... (Ctrl+Shift+S)" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconSaveAs}" Height="15" Width="15"/>
                    </Button>
                    <Button x:Name="ButtonExportToPNG" ToolTip="Export To PNG.. (Ctrl+Shift+Alt+P)" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconExportScheme}" Height="15" Width="15"/>
                    </Button>
                    <Separator Grid.Column="5" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Button x:Name="ButtonUndo" ToolTip="Undo (Ctrl + Z)" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconUndo}" Height="13" Width="13"/>
                    </Button>
                    <Button x:Name="ButtonRedo" ToolTip="Redo (Ctrl + Y)" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconRedo}" Height="13" Width="13"/>
                    </Button>
                    <Separator Grid.Column="5" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Button x:Name="ButtonZoomIn"  ToolTip="Zoom In" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconZoomIn}" Height="15" Width="15"/>
                    </Button>
                    <Button x:Name="ButtonZoomOut"  ToolTip="Zoom Out" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconZoomOut}" Height="15" Width="15"/>
                    </Button>
                    <Button x:Name="ButtonZoomOriginalSize" ToolTip="Zoom Original Size"  Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconZoomOriginalSize}" Height="15" Width="15"/>
                    </Button>
                    <Separator Grid.Column="5" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Button x:Name="ButtonCollapseUpAll" ToolTip="Collapse Up All"  Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconCollapseUpAll}" Height="13" Width="13"/>
                    </Button>
                    <Button x:Name="ButtonExpandDownAll" ToolTip="Expand Down All" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconExpandDownAll}" Height="13" Width="13"/>
                    </Button>
                    <Separator Grid.Column="5" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <RadioButton x:Name="ButtonAddNode" GroupName="ClickMode" ToolTip="Add node (Ctrl+N)" Style="{DynamicResource StyleRadioButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}" >
                        <Rectangle Fill="{DynamicResource IconAddNode}" Height="15" Width="15"/>
                    </RadioButton>
                    <RadioButton x:Name="ButtonDeleteNode" GroupName="ClickMode" ToolTip="Delete Node (N+Delete)" Style="{DynamicResource StyleRadioButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconDeleteNode}" Height="15" Width="15"/>
                    </RadioButton>
                    <RadioButton x:Name="ButtonAddParallelNode" GroupName="ClickMode" ToolTip="Add ParallelNode" Style="{DynamicResource StyleRadioButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}" >
                        <Rectangle Width="15" Height="15" Fill="{DynamicResource IconErrorList}">
                            <Rectangle.LayoutTransform >
                                <RotateTransform Angle="90"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                    </RadioButton>
                    <RadioButton x:Name="ButtonAddSubWorkflowNode" GroupName="ClickMode" ToolTip="Add SubWorkflowNode" Style="{DynamicResource StyleRadioButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}" >
                        <Image Source="/StateMachine.ico" Height="15" Width="15"/>
                    </RadioButton>
                    <RadioButton x:Name="ButtonStartSelect" GroupName="ClickMode" ToolTip="Start select (Ctrl+LMB)" Style="{DynamicResource StyleRadioButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconSelect}" Height="15" Width="15"/>
                    </RadioButton>
                    <RadioButton x:Name="ButtonStartCut" GroupName="ClickMode" ToolTip="Start cut (Alt+LMB)" Style="{DynamicResource StyleRadioButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconCut}" Height="15" Width="15"/>
                    </RadioButton>
                    <Button x:Name="ButtonSaveCode"  ToolTip="Save Code" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                        <Rectangle Fill="{DynamicResource IconSave}" Height="13" Width="13"/>
                    </Button>
                </ToolBar>

            </ToolBarTray>
            <Button Grid.Row="1" Grid.Column="1"  x:Name="ButtonChangeTheme" ToolTip="Change theme" Style="{DynamicResource StyleHeaderButton}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}">
                <Rectangle Fill="{DynamicResource IconTheme}" Height="17" Width="17"/>
            </Button>
        </Grid>


        <!--#endregion ToolBar-->

        <!--#region  Tabs-->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="18" Width="auto" x:Name="TableOfVariablesColumn" />
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition MinWidth="50"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition MinWidth="18" Width="auto" x:Name="TableOfTransitionsColumn" />
            </Grid.ColumnDefinitions>
            <!--BorderBrush - it's color on IsMouseOver, OpacityMask - it's color on IsPressed-->
            
            <GridSplitter Grid.Column="1" HorizontalAlignment="Center"  x:Name="TableOfVariablesSplitter" VerticalAlignment="Stretch" Background="{DynamicResource ColorWindowHeader}"  Width="3"  ShowsPreview="False"  IsEnabled="False" />

            
            <TabControl  x:Name="TabCanvas" Grid.Column="2"  Background="{x:Null}" BorderBrush="{x:Null}" Foreground="Green" TabStripPlacement="Top" Padding="2,2,2,0" >
                <TabItem  Header="Node editor"  Style="{DynamicResource StyleTabItem}" Background="{DynamicResource ColorWindowHeader}" Foreground="{DynamicResource ColorWindowHeaderTabItemForeground}"  BorderBrush="{DynamicResource ColorElementMouseOver}" OpacityMask="{DynamicResource ColorElementMouseOver}">
                    <view:NodesCanvas x:Name="NodesCanvas" />
                    
                </TabItem>
                <!--<TabItem  Header="DetailedView"  Style="{DynamicResource StyleTabItem}" Background="{DynamicResource ColorWindowHeader}" Foreground="{DynamicResource ColorWindowHeaderTabItemForeground}"  BorderBrush="{DynamicResource ColorElementMouseOver}" OpacityMask="{DynamicResource ColorElementMouseOver}">
                    <view:NodesCanvas x:Name="ChildCanvas" />
                </TabItem>-->
            </TabControl>
            
            <GridSplitter Grid.Column="3" HorizontalAlignment="Center"  x:Name="TableOfTransitionsSplitter" VerticalAlignment="Stretch" Background="{DynamicResource ColorWindowHeader}"  Width="3"  ShowsPreview="False"  IsEnabled="False" />

            <Expander Grid.Column="4"  x:Name="TableOfTransitionsExpander" Style="{DynamicResource StyleExpander}"  Grid.Row="0"  HorizontalContentAlignment="Stretch" ExpandDirection="Left" >
                <Expander.Header>
                    <Label  Grid.Column="0" Style="{DynamicResource StyleLabelWithIcon}" OpacityMask="{DynamicResource ColorElementMouseOver}">
                        Properties and TransitionInfo
                        <Label.LayoutTransform >
                            <RotateTransform Angle="90"/>
                        </Label.LayoutTransform>
                    </Label>
                </Expander.Header>
                <Expander.Content>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Style="{DynamicResource StyleScrollViewer}">
                            <Grid Grid.IsSharedSizeScope="True" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="StateFrom"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition SharedSizeGroup="TransitionName"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition SharedSizeGroup="StateTo"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Label  Grid.Column="0" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{DynamicResource IconStateFrom}" OpacityMask="{DynamicResource ColorMessagesForeground}" MinHeight="11" MinWidth="11">State from</Label>
                                <Label  Grid.Column="2" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{DynamicResource IconTransitionName}" OpacityMask="{DynamicResource ColorMessagesForeground}" MinHeight="14" MinWidth="14">Transition name</Label>
                                <Label  Grid.Column="4" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{DynamicResource IconStateTo}" OpacityMask="{DynamicResource ColorMessagesForeground}" MinHeight="11" MinWidth="11" Grid.ColumnSpan="2" Height="22" Grid.RowSpan="2" VerticalAlignment="Top">State To</Label>

                                <ListBox Grid.Row="1" Grid.ColumnSpan="6" x:Name="TableOfTransitions" Template="{DynamicResource TemplateListBox}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorMessagesBorder}" Foreground="{DynamicResource ColorMessagesForeground}" ItemContainerStyle="{DynamicResource StyleListBoxTransitionsItem}"  AlternationCount="2" 
                         VirtualizingStackPanel.IsVirtualizing="True" 
                          VirtualizingStackPanel.VirtualizationMode="Recycling" 
                          VirtualizingStackPanel.CacheLength="1" 
                          VirtualizingStackPanel.CacheLengthUnit="Page"                           
                          VirtualizingStackPanel.ScrollUnit="Pixel">

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <view:TableOfTransitionsItem ViewModel="{Binding}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                        </ScrollViewer>

                        <Grid Grid.Row="1">
                            <!--<Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Label  Grid.Column="0" Grid.Row="0" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{DynamicResource IconStateFrom}" OpacityMask="{DynamicResource ColorMessagesForeground}" MinHeight="11" MinWidth="11">Properties</Label>
                                <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Style="{DynamicResource StyleScrollViewer}">
                                    <ListBox x:Name="Properties" Template="{DynamicResource TemplateListBox}" Background="{DynamicResource ColorWindowHeader}" BorderBrush="{DynamicResource ColorMessagesBorder}" Foreground="{DynamicResource ColorMessagesForeground}" ItemContainerStyle="{DynamicResource StyleListBoxTransitionsItem}"  AlternationCount="2">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <view:NodeProperties ViewModel="{Binding}" Margin="5"/>
                                            </DataTemplate>
                  
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </ScrollViewer>
                            </Grid>-->
                            <ContentControl Content="{Binding PropertyView }"></ContentControl>


                        </Grid>
                    </Grid>

                </Expander.Content>
            </Expander>

        </Grid>
        <!--#endregion Tabs-->

        <!--#region Error List-->
        <GridSplitter  Grid.Row="3" x:Name="ErrorListSplitter" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="{DynamicResource ColorWindowHeader}" Height="3"  ShowsPreview="False" IsEnabled="False"/>
        <Expander Style="{DynamicResource StyleExpander}"  x:Name="ErrorListExpander" Grid.Row="4"  HorizontalContentAlignment="Stretch" ExpandDirection="Up" Margin="3,0,0,0" >
            <Expander.Header>
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label  Grid.Column="0" x:Name="LabelErrorList" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{DynamicResource IconErrorList}" OpacityMask="{DynamicResource ColorElementMouseOver}" MinHeight="14" MinWidth="14">Error List</Label>
                    <Separator Grid.Column="1" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Label  Grid.Column="2" x:Name="LabelError" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{DynamicResource IconError}" OpacityMask="{DynamicResource ColorElementMouseOver}" MinHeight="14" MinWidth="14">Erros</Label>
                    <Separator Grid.Column="3" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Label  Grid.Column="4" x:Name="LabelWarning" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{DynamicResource IconWarning}" OpacityMask="{DynamicResource ColorElementMouseOver}" MinHeight="14" MinWidth="14">Warnings</Label>
                    <Separator Grid.Column="5" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Label  Grid.Column="6" x:Name="LabelInformation" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{DynamicResource IconInformation}" OpacityMask="{DynamicResource ColorElementMouseOver}" MinHeight="14" MinWidth="14">Messages</Label>
                    <Separator Grid.Column="7" Visibility="{Binding ElementName=LabelDebug, Path=Visibility}" Style="{DynamicResource TemplateSeparator}" Height="Auto" BorderThickness="0,0,1,0" />
                    <Label  Grid.Column="8" x:Name="LabelDebug" Visibility="Hidden" Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{DynamicResource IconDebug}" OpacityMask="{DynamicResource ColorElementMouseOver}" MinHeight="14" MinWidth="14">Debug</Label>
                    <Label  Grid.Column="9" x:Name="LabelErrorListUpdate"  Style="{DynamicResource StyleLabelWithIcon}" BorderBrush="{DynamicResource IconUpdate}" OpacityMask="{DynamicResource ColorElementMouseOver}" HorizontalAlignment="Right" Margin="0,0,5,0" MinHeight="14" MinWidth="14">Update/Clear</Label>
                </Grid>
            </Expander.Header>
            <Expander.Content>
                <!--OpacityMask - Background on Selected-->
                <ListBox x:Name="MessageList" Template="{DynamicResource TemplateListBox}" Background="{DynamicResource ColorMessagesBackground}" BorderBrush="{DynamicResource ColorMessagesBorder}" Foreground="{DynamicResource ColorMessagesForeground}" ItemContainerStyle="{DynamicResource StyleListBoxItem}" 
                         VirtualizingStackPanel.IsVirtualizing="True" 
                          VirtualizingStackPanel.VirtualizationMode="Recycling" 
                          VirtualizingStackPanel.CacheLength="1" 
                          VirtualizingStackPanel.CacheLengthUnit="Page"                           
                          VirtualizingStackPanel.ScrollUnit="Pixel">
                    <ListBox.InputBindings>
                        <KeyBinding x:Name="BindingCopyError" Gesture="Ctrl+C"/>
                    </ListBox.InputBindings>
                    <ListBox.ContextMenu>
                        <ContextMenu Template="{DynamicResource TemplateContextMenu}" Background="{DynamicResource ColorMenuBackground}" BorderBrush="{DynamicResource ColorMenuBorder}" OpacityMask="{DynamicResource ColorWindowHeaderButtonBackgroundMouseOver}"  Foreground="{DynamicResource ColorMenuForeground}" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" >
                            <MenuItem Header="Copy" x:Name="ItemCopyError" InputGestureText="Ctrl+C" Style="{DynamicResource StyleContextMenuItem}">
                                <MenuItem.Icon>
                                    <Rectangle Fill="{DynamicResource IconCopy}" Height="15" Width="13"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <view:Message ViewModel="{Binding}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Expander.Content>
        </Expander>
        <!--#endregion Error List-->
    </Grid>

    <Window.InputBindings>
        <KeyBinding x:Name="BindingUndo"        Key="Z" Modifiers="Control" />
        <KeyBinding x:Name="BindingRedo"        Key="Y" Modifiers="Control" />
        <KeyBinding x:Name="BindingSave"    Gesture="Ctrl+S"/>
        <KeyBinding x:Name="BindingSaveAs"  Gesture="Ctrl+Shift+S"/>
        <KeyBinding x:Name="BindingOpen"    Gesture="Ctrl+Shift+O" />
        <KeyBinding x:Name="BindingNew"     Gesture="Ctrl+Shift+N"/>
        <KeyBinding x:Name="BindingExit"    Gesture="Alt+F4"/>
        <KeyBinding x:Name="BindingExportToJPEG"   Gesture="Ctrl+Shift+Alt+J"/>
        <KeyBinding x:Name="BindingExportToPNG"   Gesture="Ctrl+Shift+Alt+P"/>
    </Window.InputBindings>
</Window>
